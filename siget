import threading
import time
import random

# --- Variables compartidas ---
buffer = []                # Almacén compartido entre sensores y analizadores
TAMANO_BUFFER = 5          # Capacidad máxima del buffer

# --- Semáforos ---
espacios_disponibles = threading.Semaphore(TAMANO_BUFFER)  # Controla los lugares libres
datos_disponibles = threading.Semaphore(0)                 # Controla los datos listos para analizar
acceso_exclusivo = threading.Semaphore(1)                  # Evita que 2 hilos usen el buffer al mismo tiempo

# --- Función de los sensores (Productores) ---
def sensor_trafico(id_sensor):
    while True:
        # Generar un dato de tráfico aleatorio
        dato = random.randint(1, 100)
        espacios_disponibles.acquire()     # Espera si el buffer está lleno
        acceso_exclusivo.acquire()         # Entra a la sección crítica

        buffer.append(dato)
        print(f"🚗 Sensor {id_sensor} envió dato: {dato} | Buffer actual: {buffer}")

        acceso_exclusivo.release()         # Sale de la sección crítica
        datos_disponibles.release()        # Indica que hay un nuevo dato disponible

        time.sleep(random.uniform(0.5, 2)) # Espera un poco antes de enviar otro dato

# --- Función de los analizadores (Consumidores) ---
def analizador_trafico(id_analizador):
    while True:
        datos_disponibles.acquire()        # Espera si no hay datos
        acceso_exclusivo.acquire()         # Entra a la sección crítica

        dato = buffer.pop(0)
        print(f"🧠 Analizador {id_analizador} procesó dato: {dato} | Buffer actual: {buffer}")

        acceso_exclusivo.release()         # Sale de la sección crítica
        espacios_disponibles.release()     # Libera un espacio en el buffer

        time.sleep(random.uniform(1, 3))   # Simula el tiempo de análisis del dato

# --- Crear e iniciar los hilos ---
for i in range(3):  # Tres sensores de tráfico
    hilo_sensor = threading.Thread(target=sensor_trafico, args=(i + 1,), daemon=True)
    hilo_sensor.start()

for i in range(2):  # Dos analizadores del sistema
    hilo_analizador = threading.Thread(target=analizador_trafico, args=(i + 1,), daemon=True)
    hilo_analizador.start()

# --- Mantener el programa en ejecución ---
while True:
    time.sleep(1)
    
